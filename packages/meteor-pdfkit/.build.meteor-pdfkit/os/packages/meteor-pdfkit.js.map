{"version":3,"file":"/packages/meteor-pdfkit.js","sources":["meteor-pdfkit/pdfkitWrapper.js"],"names":[],"mappings":";;;;;;;;AAAA,oC;AACA,8B;;AAEA,uB;AACA,4D;;AAEA,iF;AACA,sD;AACA,yC;AACA,uB;AACA,c;AACA,e;AACA,gC;AACA,iD;AACA,6B;AACA,gC;AACA,mC;AACA,iB;AACA,0D;AACA,sB;AACA,6B;AACA,S;AACA,6D;AACA,4D;AACA,S;AACA,M;AACA,Y;AACA,E;;AAEA,G;AACA,yC;AACA,G;AACA,2F;AACA,wH","sourcesContent":["PDFDocument = Npm.require('pdfkit');\nPDFDocument.PX_PER_CM = 28.33;\n\nfs = Npm.require('fs');\nfs.writeFileFiber = Meteor.wrapAsync(fs.writeFile.bind(fs));\n\n// New output methode with a callBack respecting the classic params (err, result)\nPDFDocument.prototype.outputForMeteor = function(fn) {\n  return this.finalize((function(_this) {\n    return function() {\n      var out;\n      out = [];\n      _this.generateHeader(out);\n      return _this.generateBody(out, function() {\n        var k, ret, _i, _len;\n        _this.generateXRef(out);\n        _this.generateTrailer(out);\n        ret = [];\n        for (_i = 0, _len = out.length; _i < _len; _i++) {\n          k = out[_i];\n          ret.push(k + '\\n');\n        }\n        // add \"null ,\" to get a classic callBack prototype !\n        return fn(null, new Buffer(ret.join(''), 'binary'));\n      });\n    };\n  })(this));\n};\n\n/**\n * Sync but non blocking thread (Fibered)\n */\nPDFDocument.prototype.outputSync = Meteor.wrapAsync(PDFDocument.prototype.outputForMeteor);\nPDFDocument.prototype.writeSync = function (filename) {return fs.writeFileFiber(filename, this.outputSync(), 'binary');}\n\n"]}