{
  "name": "pdfkit",
  "description": "A PDF generation library for Node.js",
  "keywords": [
    "pdf",
    "pdf writer",
    "pdf generator",
    "graphics",
    "document",
    "vector"
  ],
  "version": "0.4.3",
  "homepage": "http://pdfkit.org/",
  "author": {
    "name": "Devon Govett",
    "email": "devongovett@gmail.com",
    "url": "http://badassjs.com/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/devongovett/pdfkit.git"
  },
  "bugs": {
    "url": "http://github.com/devongovett/pdfkit/issues"
  },
  "devDependencies": {
    "coffee-script": ">=1.0.1",
    "codemirror": "~3.20.0",
    "markdown": "~0.5.0",
    "jade": "~1.1.5"
  },
  "dependencies": {
    "png-js": ">=0.1.0",
    "linebreak": "~0.1.0"
  },
  "scripts": {
    "prepublish": "coffee -o js -c lib/ && cp -r lib/font/data js/font/data",
    "postpublish": "rm -rf ./js"
  },
  "main": "./js/document",
  "engine": [
    "node >= v0.6.0"
  ],
  "_id": "pdfkit@0.4.3",
  "dist": {
    "shasum": "ec776f11125a201abf721063b335ed2365dc867b",
    "tarball": "http://registry.npmjs.org/pdfkit/-/pdfkit-0.4.3.tgz"
  },
  "_from": "pdfkit@0.4.3",
  "_npmVersion": "1.4.2",
  "_npmUser": {
    "name": "devongovett",
    "email": "devongovett@gmail.com"
  },
  "maintainers": [
    {
      "name": "devongovett",
      "email": "devongovett@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "ec776f11125a201abf721063b335ed2365dc867b",
  "_resolved": "https://registry.npmjs.org/pdfkit/-/pdfkit-0.4.3.tgz",
  "readme": "# PDFKit\n### A PDF generation library for Node.js.\n\n## Description\n\nPDFKit is a PDF document generation library for Node that makes creating complex, multi-page, printable documents easy. \nIt's written in CoffeeScript, but you can choose to use the API in plain 'ol JavaScript if you like. The API embraces \nchainability, and includes both low level functions as well as abstractions for higher level functionality. The PDFKit API \nis designed to be simple, so generating complex documents is often as simple as a few function calls.\n\nCheck out some of the [documentation and examples](http://pdfkit.org/docs/getting_started.html) to see for yourself!\nYou can also read the guide as a [self-generated PDF](http://pdfkit.org/docs/guide.pdf) with example output displayed inline.\nIf you'd like to see how it was generated, check out the README in the [docs](https://github.com/devongovett/pdfkit/tree/master/docs)\nfolder.\n\n## Installation\n\nInstallation uses the [npm](http://npmjs.org/) package manager.  Just type the following command after installing npm.\n\n    npm install pdfkit\n\n## Features\n\n* Vector graphics\n  * HTML5 canvas-like API\n  * Path operations\n  * SVG path parser for easy path creation\n  * Transformations\n  * Linear and radial gradients\n* Text\n  * Line wrapping\n  * Text alignments\n  * Bulleted lists\n* Font embedding\n  * Supports TrueType (.ttf), TrueType Collections (.ttc), and Datafork TrueType (.dfont) fonts\n  * Font subsetting\n* Image embedding\n  * Supports JPEG and PNG files (including indexed PNGs, and PNGs with transparency)\n* Annotations\n  * Links\n  * Notes\n  * Highlights\n  * Underlines\n  * etc.\n  \n## Coming soon!\n\n* Patterns fills\n* Outlines\n* PDF Security\n* Higher level APIs for creating tables and laying out content\n* More performance optimizations\n* Even more awesomeness, perhaps written by you! Please fork this repository and send me pull requests.\n    \n## Example\n\n    PDFDocument = require 'pdfkit'\n    doc = new PDFDocument\n\n    # Embed a font, set the font size, and render some text\n    doc.font('fonts/PalatinoBold.ttf')\n       .fontSize(25)\n       .text('Some text with an embedded font!', 100, 100)\n\n    # Add another page\n    doc.addPage()\n       .fontSize(25)\n       .text('Here is some vector graphics...', 100, 100)\n\n    # Draw a triangle\n    doc.save()\n       .moveTo(100, 150)\n       .lineTo(100, 250)\n       .lineTo(200, 250)\n       .fill(\"#FF3300\")\n\n    # Apply some transforms and render an SVG path with the 'even-odd' fill rule\n    doc.scale(0.6)\n       .translate(470, -380)\n       .path('M 250,75 L 323,301 131,161 369,161 177,301 z')\n       .fill('red', 'even-odd')\n       .restore()\n\n    # Add some text with annotations\n    doc.addPage()\n       .fillColor(\"blue\")\n       .text('Here is a link!', 100, 100)\n       .underline(100, 100, 160, 27, color: \"#0000FF\")\n       .link(100, 100, 160, 27, 'http://google.com/')\n\n    # Write the PDF file to disk\n    doc.write 'output.pdf'\n     \n[The PDF output from this example](http://pdfkit.org/demo/out.pdf) (with a few additions) shows the power of PDFKit â€” producing \ncomplex documents with a very small amount of code.  For more, see the `demo` folder and the \n[PDFKit programming guide](http://pdfkit.org/docs/getting_started.html).\n\n## Documentation\n\nFor complete API documentation and more examples, see the [PDFKit website](http://pdfkit.org/).\n\n## License\n\nPDFKit is available under the MIT license.",
  "readmeFilename": "README.md"
}
